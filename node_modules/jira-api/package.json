{
  "_args": [
    [
      "jira-api",
      "C:\\rannar\\jira"
    ]
  ],
  "_defaultsLoaded": true,
  "_engineSupported": true,
  "_from": "jira-api@*",
  "_id": "jira-api@0.2.2",
  "_inCache": true,
  "_location": "/jira-api",
  "_nodeVersion": "v0.6.10",
  "_npmUser": {
    "email": "alex.kalyvitis@gmail.com",
    "name": "alexkappa"
  },
  "_npmVersion": "1.1.0-3",
  "_phantomChildren": {},
  "_requested": {
    "name": "jira-api",
    "raw": "jira-api",
    "rawSpec": "",
    "scope": null,
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/jira-api/-/jira-api-0.2.2.tgz",
  "_shasum": "5b2d4a9455afe163f3418c00229910adc6df7d5f",
  "_shrinkwrap": null,
  "_spec": "jira-api",
  "_where": "C:\\rannar\\jira",
  "dependencies": {},
  "description": "A library for working with JIRA's RESTful API",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "5b2d4a9455afe163f3418c00229910adc6df7d5f",
    "tarball": "https://registry.npmjs.org/jira-api/-/jira-api-0.2.2.tgz"
  },
  "engines": {
    "node": "*"
  },
  "installable": true,
  "keywords": [
    "JIRA",
    "jira"
  ],
  "license": "Apache License, Version 2.0",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "email": "alex.kalyvitis@gmail.com",
      "name": "alexkappa"
    }
  ],
  "name": "jira-api",
  "optionalDependencies": {},
  "readme": "# JIRA API wrapper for Node.JS\n\nA library for working with JIRA's RESTful API. No dependencies.\nSo far the following resources are supported:\n\n\t/rest/api/2/issue [GET, POST, PUT, DELETE]\n\t/rest/api/2/issue/createmeta [GET]\n\nIf you wish to contribute please follow the conventions used so far, make a new directory inside ``lib/`` named after the resource you wish to access. Thats it. Enjoy!\n\n# Installation\n\nInstall with NPM\n\n\tnpm install jira-api\n\nIn your application, require the library using\n\n\tvar jira = require('jira-api');\n\n# Usage\n\nNow you're ready to make calls to the API\n\n\tvar options = {\n\t\tconfig: {\n\t\t\t\"username\": \"someuser\",\n\t\t\t\"passowrd\": \"secretpass\",\n\t\t\t\"host\": \"/example.com/jira/\"\n\t\t},\n\t\tissueIdOrKey: \"123\"\n\t};\n\n\tjira.issue.get(options, function(response) {\n\t\tconsole.log(JSON.stringify(response, null, 4));\n\t});\n\nYou can also specify the data to send (in case of POST, PUT etc.)\n\n\tvar options = {\n\t\tconfig: {\n\t\t\t\"username\": \"someuser\",\n\t\t\t\"passowrd\": \"secretpass\",\n\t\t\t\"host\": \"example.com/jira/\"\n\t\t},\n\t\tdata: {\n\t\t\tfields: {\n\t\t\t\tproject: {\n\t\t\t\t\tkey: \"PROJ999\",\n\t\t\t\t},\n\t\t\t\tpriority: {\n\t\t\t\t\tname: \"Critical\",\n\t\t\t\t},\n\t\t\t\tsummary: \"A short summary of the issue\",\n\t\t\t\tdescription: \"A more elaborate decription of the issue\",\n\t\t\t\tissueType: {\n\t\t\t\t\tname: \"Improvement\"\n\t\t\t\t},\n\t\t\t\tassignee: {\n\t\t\t\t\tname: \"Bob\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tjira.issue.post(options, function(response) {\n\t\tconsole.log(JSON.stringify(response, null, 4));\n\t});\n\nFor a list of available request representations consult the [official API documentation](http://docs.atlassian.com/jira/REST/latest/).",
  "readmeFilename": "README.md",
  "version": "0.2.2"
}
